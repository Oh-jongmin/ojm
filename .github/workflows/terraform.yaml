name: Terraform Deployment # Terraform

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform.yaml'

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.12.1

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
    
    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      id: tf-apply
      continue-on-error: true
      run: terraform apply --auto-approve

    - name: Save Terraform Outputs
      run: terraform output -json > tf_outputs.json

    - name: Upload tf_outputs.json as artifact
      uses: actions/upload-artifact@v4
      with:
        name: tf-outputs
        path: terraform/tf_outputs.json

    - name: GH Auth
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}
      run: gh auth setup-git

    - name: Set BASTION_IP secret
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        bastion_ip=$(jq -r '.bastion_public_ip.value' tf_outputs.json)
        gh secret set BASTION_IP -b "$bastion_ip"

    - name: Set MGMT_IP secret
      env:
        GH_TOKEN: ${{ secrets.GH_PAT }}
      run: |
        mgmt_ip=$(jq -r '.mgmt_private_ip.value' tf_outputs.json)
        gh secret set MGMT_IP -b "$mgmt_ip"

    - name: Upload tfstate artifact
      uses: actions/upload-artifact@v4
      with:
        name: terraform-tfstate-backup
        path: terraform/.terraform/terraform.tfstate
